[
  {
    "ContainingType": "EVManager.Api.Controllers.PuntosCargaController",
    "Method": "Create",
    "RelativePath": "api/PuntosCarga/{create}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "EVManager.Api.Dtos.CreatePuntoCargaDto",
        "IsRequired": true
      },
      {
        "Name": "create",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Api.Dtos.OperationResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.PuntosCargaController",
    "Method": "Delete",
    "RelativePath": "api/PuntosCarga/{delete}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "delete",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Api.Dtos.OperationResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.PuntosCargaController",
    "Method": "GetChargingPointById",
    "RelativePath": "api/PuntosCarga/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Domain.PuntoCarga",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.PuntosCargaController",
    "Method": "Update",
    "RelativePath": "api/PuntosCarga/{update}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "EVManager.Api.Dtos.UpdatePuntoCargaDto",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Api.Dtos.OperationResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.PuntosCargaController",
    "Method": "GetAllChargingPoints",
    "RelativePath": "api/PuntosCarga/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EVManager.Domain.PuntoCarga, EVmanager.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.VehiculosController",
    "Method": "Create",
    "RelativePath": "api/Vehiculos/{create}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "dto",
        "Type": "EVManager.Api.Dtos.CreateVehiculoDto",
        "IsRequired": true
      },
      {
        "Name": "create",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Api.Dtos.OperationResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.VehiculosController",
    "Method": "Delete",
    "RelativePath": "api/Vehiculos/{delete}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "delete",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Api.Dtos.OperationResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.VehiculosController",
    "Method": "GetVehicleById",
    "RelativePath": "api/Vehiculos/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Domain.Vehiculo",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.VehiculosController",
    "Method": "Update",
    "RelativePath": "api/Vehiculos/{update}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "dto",
        "Type": "EVManager.Api.Dtos.UpdateVehiculoDto",
        "IsRequired": true
      },
      {
        "Name": "update",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": [
      {
        "Type": "EVManager.Api.Dtos.OperationResultDto",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVManager.Api.Controllers.VehiculosController",
    "Method": "GetAllVehicles",
    "RelativePath": "api/Vehiculos/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EVManager.Domain.Vehiculo, EVmanager.Domain, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ]
  },
  {
    "ContainingType": "EVmanager.Api.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[EVmanager.Api.WeatherForecast, EVmanager.Api, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]